import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";

import { api } from "~/utils/api";
import type { RouterOutputs } from "~/utils/api";
import { SignIn, SignInButton, SignOutButton, useUser } from "@clerk/nextjs";
import {
  Button,
  Container,
  Flex,
  Heading,
  Image,
  Input,
} from "@chakra-ui/react";

import ChakraNextImage from "~/components/ChakraNextImage";

const CreatePost = () => {
  const { user } = useUser();

  if (!user) return null;

  return (
    <Flex
      gap="4"
      borderY="1px solid"
      borderColor="border"
      p="4"
      w="100%"
      flexDir="column"
    >
      <Flex>
        <Flex width="10%">

        <ChakraNextImage
          borderRadius="100px"
          height="14"
          width="14"
          src={user.profileImageUrl}
          alt="profileImage"
          />
          </Flex>
        <Input
          placeholder="TuiteÃ¡ tus emojis"
          type="text"
          bg="transparent"
          color="primary"
          border="none"
          size="lg"
          _focusVisible={{border: "none"}}
          w="90%"
        />
      </Flex>
      <Flex justify="flex-end">
        <Button
          bg="secondary"
          color="primary"
          borderRadius="2xl"
          _hover={{ bg: "secondary", color: "primary" }}
          _active={{ bg: "secondary", color: "primary" }}
        >
          Twittear
        </Button>
      </Flex>
    </Flex>
  );
};

type PostWithUser = RouterOutputs["posts"]["getAll"][number];
const PostView = (props: PostWithUser) => {
  const { post, author } = props;

  const date = new Date(post.createdAt);
  const postDate = date.toLocaleTimeString("es-AR", { hour: "numeric", minute: "numeric"})
  console.log(postDate)

  return (
    <Flex
      key={post.id}
      px="3"
      py="6"
      borderBottom="1px solid"
      borderColor="border"
      align="center"
      gap="6"
    >
      <ChakraNextImage src={author.profileImageUrl} borderRadius="100px" height="14" width="14" alt="Profile image" />
      <Flex flexDir="column" gap="2">
      <Heading as="h4" fontSize="md" color="primary" fontWeight="bold">{author.username}<span style={{marginLeft: "10px", fontWeight: "normal", color: "gray"}}>@{author.username} - {postDate}</span></Heading>
      {post.content}
      </Flex>
    </Flex>
  );
}

const Home: NextPage = () => {
  const { data, isLoading } = api.posts.getAll.useQuery();

  const user = useUser();

  if (!user) return <SignInButton />;

  if (isLoading) return <div>Loading...</div>;

  if (!data) return <div>Something went wrong</div>;

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Container maxW="container.2xl" h="100%" bg="bg">
        <Flex flexDir="column" maxW="container.sm" h="100%" m="auto">
          <Heading as="h2" color="primary" fontSize="2xl" p="3">
            Inicio
          </Heading>
          {user.isSignedIn && <CreatePost />}
          <Flex flexDir="column">
            {data?.map((fullPost) => (
              <PostView {...fullPost} key={fullPost.post.id} />
            ))}
          </Flex>
        </Flex>
      </Container>
    </>
  );
};

export default Home;
